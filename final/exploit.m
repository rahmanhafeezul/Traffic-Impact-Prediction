function [prediction]=exploit(sub_idx,ctxt,label,t)
%UNTITLED5 Summary of this function goes here
%   Detailed explanation goes here
global ctxt_partition ctxt_dim slice_param learner_num action_dim strategy_num h y explore_set explore_setlabel train_set label_set prediction label

disp('entered exploit');
%%disp('context');
%%display(ctxt);
%%disp('label');
%%display(label);
%%disp('id');
%%display(sub_idx);
for v=1:strategy_num
if(v==1)
for co=1:slice_param^ctxt_dim
    if(co==sub_idx)
    for learner=1:learner_num
        curr_train=train_set(:,:,learner,co);
        label_train=label_set(:,:,learner,co);
       %% display(curr_train);
        %% display(label_train);
        nb=LinearModel.stepwise(curr_train,label_train);
        e=predict(nb,explore_set(:,:,learner,v,sub_idx));
        %%cm=confusionmat(explore_setlabel(:,:,learner,v,sub_idx),e);
        %%N = sum(cm(:));
        %%accuracy = 1-( ( N-sum(diag(cm)) ) / N);
           %%  accuracy=1-mean(rdivide(abs(explore_setlabel(:,:,learner,v,sub_idx)-e),explore_setlabel(:,:,learner,v,sub_idx)));
      accuracy=sqrt(mean(abs(explore_setlabel(:,:,learner,v,sub_idx)-e).^2));

        disp('done with 1st block');
        ctxt_partition(co).reward_strategy(v,learner)=((ctxt_partition(co).reward_counter(v,learner)*ctxt_partition(co).reward_strategy(v,learner))+accuracy)/(ctxt_partition(co).reward_counter(v,learner)+1);
        ctxt_partition(co).reward_counter(v,learner)=ctxt_partition(co).reward_counter(v,learner)+1;
    end 
    end 
end

end
if(v==2)
    for co=1:slice_param^ctxt_dim
        if(co==sub_idx)
            for learner=1:learner_num
            curr_train=train_set(:,:,learner,co);
            label_train=label_set(:,:,learner,co);
            ensemble=GeneralizedLinearModel.fit(curr_train,label_train);
            e=predict(ensemble,explore_set(:,:,learner,v,sub_idx));
            %%cm = confusionmat(explore_setlabel(:,:,learner,v,sub_idx),e);
            %%N = sum(cm(:));
            %%accuracy = 1-( ( N-sum(diag(cm)) ) / N);
                      %%   accuracy=1-mean(rdivide(abs(explore_setlabel(:,:,learner,v,sub_idx)-e),explore_setlabel(:,:,learner,v,sub_idx)));
      accuracy=sqrt(mean(abs(explore_setlabel(:,:,learner,v,sub_idx)-e).^2));

            disp('done with 2nd block');

            ctxt_partition(co).reward_strategy(v,learner)=((ctxt_partition(co).reward_counter(v,learner)*ctxt_partition(co).reward_strategy(v,learner))+accuracy)/(ctxt_partition(co).reward_counter(v,learner)+1);
            ctxt_partition(co).reward_counter(v,learner)=ctxt_partition(co).reward_counter(v,learner)+1;
            end
        
       end
    end
end
if(v==3)
    for co=1:slice_param^ctxt_dim
        if(co==sub_idx)
        for learner=1:learner_num
        curr_train=train_set(:,:,learner,co);
        label_train=label_set(:,:,learner,co);
         tree = RegressionTree.fit(curr_train,label_train);
        e=predict(tree,explore_set(:,:,learner,v,sub_idx));
        %%cm=confusionmat(explore_setlabel(:,:,learner,v,sub_idx),e);
        %%N = sum(cm(:));
        %%accuracy = 1-( ( N-sum(diag(cm)) ) / N);
%%                     accuracy=1-mean(rdivide(abs(explore_setlabel(:,:,learner,v,sub_idx)-e),explore_setlabel(:,:,learner,v,sub_idx)));
      accuracy=sqrt(mean(abs(explore_setlabel(:,:,learner,v,sub_idx)-e).^2));

                disp('done with 3rd block');

        ctxt_partition(co).reward_strategy(v,learner)=((ctxt_partition(co).reward_counter(v,learner)*ctxt_partition(co).reward_strategy(v,learner))+accuracy)/(ctxt_partition(co).reward_counter(v,learner)+1);
        ctxt_partition(co).reward_counter(v,learner)=ctxt_partition(co).reward_counter(v,learner)+1;
        end
        end
    end
end
if(v==4)
    for co=1:slice_param^ctxt_dim
        if(co==sub_idx)
      for learner=1:learner_num
        curr_train=train_set(:,:,learner,co);
        label_train=label_set(:,:,learner,co);
        t=fitensemble(curr_train,label_train,'LSBoost',1000,'Tree');
        yPredicted = predict(t,explore_set(:,:,learner,v,sub_idx));
        %%cm=confusionmat(explore_setlabel(:,:,learner,v,sub_idx),yPredicted);
        %%N = sum(cm(:));
        %%accuracy = 1-( ( N-sum(diag(cm)) ) / N);
                    %% accuracy=1-mean(rdivide(abs(explore_setlabel(:,:,learner,v,sub_idx)-yPredicted),explore_setlabel(:,:,learner,v,sub_idx)));
      accuracy=sqrt(mean(abs(explore_setlabel(:,:,learner,v,sub_idx)-yPredicted).^2));

                disp('done with 4th block');

        ctxt_partition(co).reward_strategy(v,learner)=((ctxt_partition(co).reward_counter(v,learner)*ctxt_partition(co).reward_strategy(v,learner))+accuracy)/(ctxt_partition(co).reward_counter(v,learner)+1);  
        ctxt_partition(co).reward_counter(v,learner)=ctxt_partition(co).reward_counter(v,learner)+1;
      end
        end
    end
end



end

disp('done with exploit');
[o,c]=find(ctxt_partition(sub_idx).reward_strategy==min(ctxt_partition(sub_idx).reward_strategy(:)));
r=datasample(o,1);
disp(r);
disp('trying to predict');
if(r==1)
    disp('trying to predict and r is 1');
    prediction=predict(nb,ctxt);
    display(prediction);disp('using Linear Regression for prediction');
end
if(r==2)
        disp('trying to predict and r is 2');

        prediction=predict(ensemble,ctxt);
            display(prediction);disp('using Generalized Linear Model for prediction');

end
if(r==3)
        disp('trying to predict and r is 3');

            prediction=predict(tree,ctxt);
                display(prediction);disp('using Regression tree for prediction');

end
if(r==4)
        disp('trying to predict and r is 4');

            prediction=predict(t,ctxt);
                display(prediction);disp('using ensemble for prediction');

end

end









